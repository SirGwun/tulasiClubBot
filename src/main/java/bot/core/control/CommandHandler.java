package bot.core.control;

import bot.core.Main;
import bot.core.PaymentBot;
import bot.core.util.ChatUtils;
import bot.core.util.DataUtils;
import bot.core.util.MessageUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.bots.AbsSender;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.List;

public class CommandHandler {
    private static final Logger log = LoggerFactory.getLogger(CommandHandler.class);
    public void handleCommand(String command, long userID, PaymentBot paymentBot) {
        PaymentBot.log.info("New command {}", command);
        String[] data = command.split(" ");
        switch (data[0]) {
            case "/start":
                handleStartCommand(userID);
                break;
            case "/set_group":
                handleSetGroupCommand(userID);
                break;
            case "/new_group":
                handleNewGroupCommand(userID);
                break;
            case "/cancel":
                handleCancelCommand(userID);
                break;
            case "/info":
                handleInfoCommand(userID);
                break;
            case "/help":
                handleHelpCommand(userID);
                break;
            case "/edit_info":
                handleEditInfoCommand(userID);
                break;
            case "/edit_help":
                handleEditHelpCommand(userID);
                break;
            case "/del":
                handleDelCommand(userID);
                break;
            case "/catalog":
                handleCatalogCommand(userID);
                break;
            default:
                handleUnknownCommand(userID, command);
                break;
        }
    }

    private void handleStartCommand(long userID) {
        log.info("User {} started bot", userID);
        ChatUtils.sendMessage(userID, "–ü—Ä–∏–≤–µ—Ç! üëã\n\n" +
                "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –∫—É—Ä—Å–µ *¬´–û–º–æ–ª–æ–∂–µ–Ω–∏–µ. –û—Å–Ω–æ–≤—ã –ê—é—Ä–≤–µ–¥—ã¬ª* (–≤—Ç–æ—Ä–æ–π –ø–æ—Ç–æ–∫) ‚Äî —ç—Ç–æ –≥–ª—É–±–æ–∫–∞—è 6-–º–µ—Å—è—á–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –≤–∫–ª—é—á–∞—é—â–∞—è –ª–µ–∫—Ü–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞, –ø—Ä–∞–∫—Ç–∏–∫–∏, –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ —ç—Å—Å–µ. üìöüßò‚Äç‚ôÄÔ∏è\n\n" +
                "üîπ *–§–æ—Ä–º–∞—Ç—ã —É—á–∞—Å—Ç–∏—è:*\n" +
                "1. –ú–ê–ö–°–ò–ú–£–ú ‚Äî –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∫—É—Ä—Å–∞, –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –±–æ–Ω—É—Å—ã (35000‚ÇΩ)\n" +
                "2. –ú–ò–ù–ò–ú–£–ú ‚Äî —Ç–æ–ª—å–∫–æ –ª–µ–∫—Ü–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞:\n" +
                "   ‚Ä¢ –ø–æ –æ–¥–Ω–æ–º—É –∑–∞–Ω—è—Ç–∏—é (600‚ÇΩ)\n" +
                "   ‚Ä¢ –ø–æ –º–µ—Å—è—Ü–∞–º (–æ—Ç 2400‚ÇΩ –¥–æ 3000‚ÇΩ)\n" +
                "   ‚Ä¢ –∑–∞ –ø–æ–ª–≥–æ–¥–∞ (16200‚ÇΩ)\n" +
                "3. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û ‚Äî –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ\n\n" +
                "üß™ –ü—Ä–∞–∫—Ç–∏–∫–∏: –í–∏—Ä–µ—á–∞–Ω–∞, –û–º–æ–ª–æ–∂–µ–Ω–∏–µ –ª–∏—Ü–∞, –ê—é—Ä–≤–µ–¥–∏—á–µ—Å–∫–∞—è –∫—É–ª–∏–Ω–∞—Ä–∏—è –∏ –¥—Ä. \n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://t.me/+FiUhZoAKWbU5Nzky\n\n" +
                "‚úâ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–π –æ–ø–ª–∞—Ç—É, –∏ —è –¥–æ–±–∞–≤–ª—é –≤–∞—Å –≤ –æ–±—É—á–∞—é—â—É—é –≥—Ä—É–ø–ø—É ¬´" + DataUtils.getGroupName(DataUtils.getMainGroupID()) + "¬ª.\n\n" +
                "üìå –•–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –≥—Ä—É–ø–ø—É? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /set_group\nüìñ –û–ø–∏—Å–∞–Ω–∏–µ –ª–µ–∫—Ü–∏–π ‚Äî /catalog\n\n" +
                "–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø—É—Ç—å –∫ –æ–º–æ–ª–æ–∂–µ–Ω–∏—é? –ù–∞—á–Ω—ë–º!\n\n" +
                "*–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —Å–µ–π—á–∞—Å —è –º–æ–≥—É –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω—É –≥—Ä—É–ø–ø—É –∑–∞ —Ä–∞–∑. –ï—Å–ª–∏ –≤—ã –æ–ø–ª–∞—Ç–∏–ª–∏ —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—Ç –∂–µ —á–µ–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ –¥–ª—è –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º —ç—Ç–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ –ø—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.");

    }

    private void handleSetGroupCommand(long userID) {
        log.info("User {} set group", userID);

        if (DataUtils.getGroupList().isEmpty()) {
            ChatUtils.sendMessage(userID, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø");
            return;
        }
        InlineKeyboardMarkup allGroupKeyboard = ChatUtils.getAllGroupKeyboard(userID, "setGroup");
        boolean hasGroupException = false;
        for (List<InlineKeyboardButton> row : allGroupKeyboard.getKeyboard()) {
            for (InlineKeyboardButton button : row) {
                if (button.getText().startsWith("!")) {
                    hasGroupException = true;
                }
            }
        }
        if (hasGroupException) {
            ChatUtils.sendMessage(userID, "–ì—Ä—É–ø–ø—ã –ø–æ–º–µ—á–µ–Ω—ã–µ \"!\" –ª–∏–±–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ª–∏–±–æ –±–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—å—Å—è –≤ –Ω–∏—Ö –∞–¥–º–∏–Ω–æ–º\n\n–†–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Ö —É–¥–∞–ª–∏—Ç—å");
        }

        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(userID);
        sendMessage.setText("–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É");
        sendMessage.setReplyMarkup(allGroupKeyboard);
        try {
            Main.bot.execute(sendMessage);
        } catch (TelegramApiException e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /setGroup {}", e.getMessage());
        }
    }

    private void handleCatalogCommand(long userID) {
        log.info("user {} get /catalog command", userID);
        String catalog = DataUtils.getCatalog();
        if (catalog != null) {
            List<String> messages = MessageUtils.splitMessage(catalog, 4096);
            for (String message : messages) {
                ChatUtils.sendMessage(userID, message);
            }
        } else {
            ChatUtils.sendMessage(userID, "–ö–∞—Ç–∞–ª–æ–≥ –ø–æ–∫–∞ –ø—É—Å—Ç");
            log.info("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞");
        }
    }

    private void handleNewGroupCommand(long userID) {
        log.info("User {} create new group", userID);
        if (userID == DataUtils.getAdminID()) {
            ChatUtils.sendMessage(userID, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã ");
            PaymentBot.newGroup = true;
        } else {
            ChatUtils.sendMessage(userID, "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
        }
    }

    private void handleCancelCommand(long userID) {
        PaymentBot.log.info("User {} cancel command", userID);
        if (userID == DataUtils.getAdminID()) {
            PaymentBot.newGroup = false;
            PaymentBot.newGroupName = null;
            ChatUtils.sendMessage(userID, "–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –∫–æ–º–∞–Ω–¥–æ–π –æ—Ç–º–µ–Ω–µ–Ω");
        } else {
            ChatUtils.sendMessage(userID, "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
        }
    }

    private void handleInfoCommand(long userID) {
        ChatUtils.sendMessage(userID, DataUtils.getInfo());
    }

    private void handleHelpCommand(long userID) {
        ChatUtils.sendMessage(userID, DataUtils.getHelp());
    }

    private void handleEditInfoCommand(long userID) {
        log.info("User {} edit info", userID);
        if (userID == DataUtils.getAdminID()) {
            PaymentBot.editInfo = true;
            ChatUtils.sendMessage(userID, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã");
        } else {
            ChatUtils.sendMessage(userID, "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
        }
    }

    private void handleEditHelpCommand(long userID) {
        log.info("User {} edit help", userID);
        if (userID == DataUtils.getAdminID()) {
            PaymentBot.editHelp = true;
            ChatUtils.sendMessage(userID, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏");
        } else {
            ChatUtils.sendMessage(userID, "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
        }
    }

    private void handleUnknownCommand(long userID, String message) {
        log.info("User {} send unknown command {}", userID, message);
        ChatUtils.sendMessage(userID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞");
    }
}
